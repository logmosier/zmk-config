/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  D  |  R  |  W  |  B  |   |  J  |  F   |  U  |  P  |  \  |   DEL    |
// | BSPC |  A  |  S  |  H  |  T  |  G  |   |  Y  |  N   |  E  |  O  |  I  |    =      |
// | CTRL |  Z  |  X  |  M  |  C  |  V  |   |  K  |  L   |  ,  |  .  |  '  | / |
//                         | ALT | LWR | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp BSLH &kp DEL
   &kp BSPC  &kp A &lt 2 S &kp H &kp T &kp G   &kp Y &lt 1 N  &kp E     &kp O   &kp I &kp EQUAL
   &kp LCTRL &kp Z &kp X &kp M &kp C &kp V   &kp K &kp L  &kp COMMA &kp DOT &kp SQT &kp BSLH
                        &kp LALT  &mt LSHIFT SPACE &lt 3 SPACE &mt LSHIFT RET  &kp RALT
                        >;
                };
  num_layer {
// -------------------------------------------------------------------------------------
// |  _ |  _  |  1  |  2  |  3  |  B  |   |  _  |  _   |  =  |  +  |  _  |   _    |
// | _ |  0  |  4  |  5  |  6  |  G  |   |  _  |  _:_   |  -  |  *  |  /  |    _      |
// | _ |  _  |  7  |  8  |  9  |  V  |   |  _  |  _   |  _  |  _  |  _  | _ |
//                         | ALT | LWR | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp BSLH &kp DEL
   &kp BSPC  &kp A &lt 2 S &kp H &kp T &kp G   &kp Y &trans  &kp E     &kp O   &kp I &kp EQUAL
   &kp LCTRL &kp Z &kp X &kp M &kp C &kp V   &kp K &kp L  &kp COMMA &kp DOT &kp SQT &kp BSLH
                        &trans  &trans &trans &trans &trans
                        >;
                };
                
     s_layer {
                        bindings = <
   &kp TAB   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp BSLH &kp DEL
   &kp BSPC  &kp A &trans &kp H &kp T &kp G   &kp Y &trans  &kp E     &kp O   &kp I &kp EQUAL
   &kp LCTRL &kp Z &kp X &kp M &kp C &kp V   &kp K &kp L  &kp COMMA &kp DOT &kp SQT &kp BSLH
                        &trans  &trans &trans &trans &trans
                        >;
                };

   a_layer{
                        bindings = <
   bindings = <
   &kp TAB   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp BSLH &kp DEL
   &kp BSPC  &kp A &trans &kp H &kp T &kp G   &kp Y &trans  &kp E     &kp O   &kp I &kp EQUAL
   &kp LCTRL &kp Z &kp X &kp M &kp C &kp V   &kp K &kp L  &kp COMMA &kp DOT &kp SQT &kp BSLH
                         &trans  &trans &trans &trans &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
                        bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &none        &none
                                                             &trans      &trans       &tog 3        &trans      &trans
                        >;
                };
        };
};
